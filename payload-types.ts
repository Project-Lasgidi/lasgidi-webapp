/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    conferences: Conference;
    communities: Community;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role: 'admin' | 'user';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "conferences".
 */
export interface Conference {
  id: string;
  name: string;
  logo: string | Media;
  website: string;
  description: string;
  pictures: {
    picture: string | Media;
    id?: string | null;
  }[];
  language?: string | null;
  tool?:
    | (
        | 'Docker'
        | 'Kubernetes'
        | 'Git'
        | 'Jenkins'
        | 'AWS'
        | 'Azure'
        | 'Google Cloud Platform'
        | 'React'
        | 'Angular'
        | 'Vue.js'
        | 'Node.js'
        | 'TensorFlow'
        | 'PyTorch'
        | 'Pandas'
        | 'Jupyter'
        | 'Elasticsearch'
        | 'MongoDB'
        | 'PostgreSQL'
        | 'GraphQL'
        | 'Redis'
        | 'Adobe Photoshop'
        | 'Adobe Illustrator'
        | 'Sketch'
        | 'Figma'
        | 'Adobe XD'
        | 'InVision'
        | 'Affinity Designer'
        | 'Canva'
        | 'Blender'
        | 'AutoCAD'
      )
    | null;
  location?: string | null;
  submitter_name: string;
  submitter_email: string;
  start_date: string;
  end_date: string;
  region?:
    | ('Africa' | 'Asia' | 'Central America' | 'Europe' | 'Middle East' | 'North America' | 'Pacific' | 'South America')
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "communities".
 */
export interface Community {
  id: string;
  name: string;
  website: string;
  description: string;
  region?:
    | ('Africa' | 'Asia' | 'Central America' | 'Europe' | 'Middle East' | 'North America' | 'Pacific' | 'South America')
    | null;
  tool?:
    | (
        | 'Docker'
        | 'Kubernetes'
        | 'Git'
        | 'Jenkins'
        | 'AWS'
        | 'Azure'
        | 'Google Cloud Platform'
        | 'React'
        | 'Angular'
        | 'Vue.js'
        | 'Node.js'
        | 'TensorFlow'
        | 'PyTorch'
        | 'Pandas'
        | 'Jupyter'
        | 'Elasticsearch'
        | 'MongoDB'
        | 'PostgreSQL'
        | 'GraphQL'
        | 'Redis'
        | 'Adobe Photoshop'
        | 'Adobe Illustrator'
        | 'Sketch'
        | 'Figma'
        | 'Adobe XD'
        | 'InVision'
        | 'Affinity Designer'
        | 'Canva'
        | 'Blender'
        | 'AutoCAD'
      )
    | null;
  language?:
    | (
        | 'JavaScript'
        | 'Python'
        | 'Java'
        | 'C#'
        | 'C++'
        | 'C'
        | 'TypeScript'
        | 'Swift'
        | 'PHP'
        | 'Ruby'
        | 'Go'
        | 'Kotlin'
        | 'Rust'
        | 'Scala'
      )
    | null;
  logo: string | Media;
  submitter_email: string;
  submitter_name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}